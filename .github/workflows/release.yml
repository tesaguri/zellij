# The way this works is the following:
#
# Reference:
# - https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build-release:
    name: build-release
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build:
          - linux musl x64
          - macos x64
        include:
          - build: linux musl x64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
          - build: macos x64
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Add WASM target
        run: rustup target add wasm32-wasi

      - name: Install cargo-make
        run: cargo install --debug cargo-make

      - name: Install musl-tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y --no-install-recommends musl-tools

      - name: Install wasm-opt
        run: brew install binaryen

      - name: Build release binary
        run: cargo make ci-build-release ${{ matrix.target }}

      - name: Strip release binary
        run: strip "target/${{ matrix.target }}/release/zellij"
        
      - name: Tar release
        id: make-artifact
        working-directory: ./target/${{ matrix.target }}/release
        run: |
          name="zellij-${GITHUB_REF#refs/tags/}-${{matrix.target}}.tar.gz"
          tar cvfz "${name}" "zellij"
          echo "::set-output name=name::$name"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: target/${{ matrix.target }}/release/${{ steps.make-artifact.outputs.name }}
  upload:
    name: upload files
    runs-on: ubuntu-latest
    needs: build-release
    steps:   
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifact/*

